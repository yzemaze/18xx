require: rubocop-performance

# TODO: check for defaults and remove obsolete

AllCops:
  TargetRubyVersion: 3.0

Gemspec/DateAssignment:
  Enabled: true

Layout/EndOfLine:
  EnforcedStyle: lf

Layout/FirstArgumentIndentation:
  Enabled: false

Layout/FirstArrayElementIndentation:
  Enabled: false

Layout/FirstHashElementIndentation:
  Enabled: true

Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/LineLength:
  Max: 120
  Exclude:
    - 'assets/js/view/svg_tokens/**/*'

Layout/MultilineMethodCallIndentation:
  Enabled: false

Layout/MultilineHashBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

Layout/MultilineOperationIndentation:
  Enabled: false

Layout/SpaceBeforeBrackets:
  Enabled: false

Lint/AmbiguousAssignment:
  Enabled: true

Lint/ConstantDefinitionInBlock:
  Enabled: true

Lint/DeprecatedConstants:
  Enabled: true

Lint/DuplicateBranch:
  Enabled: true

Lint/DuplicateRegexpCharacterClassElement:
  Enabled: true

Lint/EmptyBlock:
  Enabled: true

Lint/EmptyClass:
  Enabled: true

Lint/FloatComparison:
  Enabled: true

Lint/LambdaWithoutLiteralBlock:
  Enabled: true

Lint/MissingSuper: # TODO enable & check offenses
  Enabled: false

Lint/NoReturnInBeginEndBlocks:
  Enabled: true

Lint/NumberedParameterAssignment:
  Enabled: true

Lint/OrAssignmentToConstant:
  Enabled: true

Lint/RedundantDirGlobSort: # (new in 1.8)
  Enabled: true

Lint/RedundantSafeNavigation:
  Enabled: true

Lint/SymbolConversion:
  Enabled: true

Lint/ToEnumArguments:
  Enabled: true

Lint/TripleQuotes:
  Enabled: true

Lint/UnexpectedBlockArity:
  Enabled: false

Lint/UnmodifiedReduceAccumulator:
  Enabled: true

Lint/UnusedMethodArgument:
  Enabled: true
  AllowUnusedKeywordArguments: true

Lint/UselessMethodDefinition: # TODO enable & check offenses
  Enabled: false

Lint/UselessTimes:
  Enabled: true

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Enabled: false

Naming/VariableNumber: # TODO enable & check offenses, default or snake_case?
  Enabled: false
  # EnforcedStyle: snake_case

Naming/MethodParameterName:
  Enabled: false

Performance/AncestorsInclude:
  Enabled: false

Performance/BigDecimalWithNumericArgument:
  Enabled: true

Performance/BlockGivenWithExplicitBlock:
  Enabled: true

# https://github.com/rubocop/rubocop-performance/issues/99#issuecomment-582560228
Performance/Caller:
  Enabled: false

# code readibility trumps performance improvement
Performance/Casecmp:
  Enabled: false

# would add many lines, but does not improve performance significantly
Performance/ChainArrayAllocation:
  Enabled: false

# code readibility trumps performance improvement
Performance/CollectionLiteralInLoop:
  Enabled: false

Performance/ConstantRegexp:
  Enabled: true

Performance/MethodObjectAsBlock:
  Enabled: true

# works fine for numbers, might be problematic for strings
# http://www.albertoalmagro.com/ruby-rangeinclude-vs-rangecover/
Performance/RangeInclude:
  Enabled: true

# not safe, performance improvement negligible
Performance/RedundantEqualityComparisonBlock:
  Enabled: false

Performance/RedundantSortBlock:
  Enabled: true

Performance/RedundantSplitRegexpArgument:
  Enabled: true

Performance/RedundantStringChars:
  Enabled: true

Performance/ReverseFirst:
  Enabled: true

Performance/SortReverse:
  Enabled: true

Performance/Squeeze:
  Enabled: true

Performance/StringInclude:
  Enabled: true

Performance/Sum:
  Enabled: true

Performance/TimesMap:
  Enabled: true

Style/ArgumentsForwarding:
  Enabled: true

Style/CaseLikeIf:
  Enabled: true

Style/ClassVars:
  Enabled: false

Style/CollectionCompact:
  Enabled: false

# all (6) duplicated loops are used on purpose and for good reason
Style/CombinableLoops:
  Enabled: false

Style/CommandLiteral:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DocumentDynamicEvalDefinition:
  Enabled: true

Style/EmptyCaseCondition:
  Enabled: false

Style/EndlessMethod:
  Enabled: true

Style/ExplicitBlockArgument:
  Enabled: true

Style/HashAsLastArrayItem:
  Enabled: true

Style/HashConversion:
  Enabled: true

# unsafe, problems with 1860
Style/HashEachMethods:
  Enabled: false

Style/HashExcept:
  Enabled: true

# code readibility: case trumps hash-lookup
Style/HashLikeCase:
  Enabled: false

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/IfWithBooleanLiteralBranches:
  Enabled: true

Style/MultipleComparison:
  Enabled: false

Style/MultilineIfModifier:
  Enabled: false

Style/NegatedIfElseCondition:
  Enabled: false

Style/NilLambda:
  Enabled: true

Style/OptionalBooleanParameter: # TODO enable & check offenses
  Enabled: false

Style/RedundantArgument:
  Enabled: false

# conflicts with Style/MutableConstant
Style/RedundantFreeze:
  Enabled: false

Style/RedundantRegexpEscape:
  Enabled: true

# enabling would break compiling deps!
Style/SlicingWithRange:
  Enabled: false

Style/SoleNestedConditional:
  Enabled: true

Style/StringConcatenation:
  Enabled: false

Style/SwapValues:
  Enabled: false

Style/TrailingCommaInArguments:
  Enabled: false

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/DoubleNegation:
  Enabled: false
